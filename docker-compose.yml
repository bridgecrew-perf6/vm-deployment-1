version: '2'

services:
  edge:
    image: traefik:v2.6
    command:
      - --log.level=DEBUG
      - --pilot.token=$TRAEFIK_PILOT
      - --log.filePath=/var/log/traefik.log
      - --accesslog.filepath=/var/log/access.log
      - --entryPoints.web.address=$TRAEFIK_HTTP_LISTEN_HOST:$TRAEFIK_HTTP_LISTEN_PORT
      - --entryPoints.web.forwardedHeaders.insecure=true
      - --entryPoints.websecure.address=$TRAEFIK_HTTPS_LISTEN_HOST:$TRAEFIK_HTTPS_LISTEN_PORT
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.email=$LETS_ENCRYPT_EMAIL
      - --certificatesresolvers.myresolver.acme.storage=acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker
    labels:
      - "traefik.http.middlewares.auth.forwardauth.address=$AUTH_ENDPOINT"
      - "traefik.http.middlewares.auth.forwardauth.authResponseHeaders=Cookie, X-Session"
      - "traefik.http.middlewares.auth.forwardauth.authRequestHeaders=Accept, Cookie, Authorization, Location"
      - "traefik.http.middlewares.target_is_static.stripprefix.prefixes=/login,/user,/vm,/_logs"
      - "traefik.http.middlewares.auth_then_strip.chain.middlewares=auth,target_is_static"
      - "traefik.http.middlewares.vscode-uuid-strip.stripprefixregex.regex=/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      # - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      # - "traefik.http.middlewares.cors.headers.accesscontrolalloworigin=https://$DOMAIN"
      # - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      # - "traefik.http.middlewares.cors.headers.addvaryheader=true"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./acme.json:/acme.json"
    networks:
      - vm
      - frontend

  authserver:
    container_name: authserver
    image: thallosaurus.de/cyberpsych0siis/authserver:dev
    labels:
      - traefik.http.routers.login.middlewares=errorcats
      - traefik.http.routers.login.rule=Host(`$DOMAIN`) && (Path(`/login`) && (Method(`OPTIONS`) || Method(`POST`))) || (Path(`/logout`)) || (Path(`/signup`))
      - traefik.http.routers.login.tls.certresolver=myresolver
    networks:
      - frontend

  loginui:
    container_name: loginui
    image: thallosaurus.de/cyberpsych0siis/logon-ui:dev
    labels:
      - "traefik.http.routers.loginui.middlewares=target_is_static"
      - "traefik.http.routers.loginui.rule=Host(`$DOMAIN`) && PathPrefix(`/login`) && Method(`GET`)"
      - "traefik.http.routers.loginui.tls.certresolver=myresolver"
    networks:
      - frontend

  httpcats:
    container_name: errorpages-cats
    image: thallosaurus.de/cyberpsych0siis/traefik-http-cats:dev
    labels:
      - "traefik.http.middlewares.errorcats.errors.query=/?code={status}"
      - "traefik.http.middlewares.errorcats.errors.status=404,403,418,500-599"
      - "traefik.http.middlewares.errorcats.errors.service=$ERRORPAGE_HANDLER_SERVICE"
    networks:
      - frontend

  frontpage:
    container_name: frontpage
    image: thallosaurus.de/cyberpsych0siis/frontpage:dev
    labels:
      - "traefik.http.routers.frontpage.middlewares=cors,target_is_static,errorcats"
      - "traefik.http.routers.frontpage.rule=Host(`$DOMAIN`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontpage.tls.certresolver=myresolver"
    networks:
      - frontend

  userarea:
    container_name: userarea
    image: thallosaurus.de/cyberpsych0siis/userarea:dev
    labels:
      - "traefik.http.routers.userarea.rule=Host(`$DOMAIN`) && PathPrefix(`/user`)"
      - "traefik.http.routers.userarea.middlewares=auth_then_strip,errorcats"
      - "traefik.http.routers.userarea.tls.certresolver=myresolver"
    networks:
      - frontend

  dockerui:
    container_name: dockerui
    image: thallosaurus.de/cyberpsych0siis/container-gui:main
    labels:
      - "traefik.http.routers.containerui.tls.certresolver=myresolver"
      - "traefik.http.routers.containerui.rule=Host(`$DOMAIN`) && (PathPrefix(`/vm`) && !Path(`/vm/socket`))"
      - "traefik.http.routers.containerui.middlewares=auth_then_strip,errorcats"
    networks:
      - frontend

  vmhost:
    restart: unless-stopped
    container_name: vmhost
    image: thallosaurus.de/cyberpsych0siis/dockervm:dev
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - "SUBDOMAIN=$SUBDOMAIN"
      - "NETWORK_ID=$NETWORK_ID"
      - "DOCKER_REGISTRY_USERNAME=$DOCKER_REGISTRY_USERNAME"
      - "DOCKER_REGISTRY_PASSWORD=$DOCKER_REGISTRY_PASSWORD"
      - "DOCKER_REGISTRY_ADDRESS=$DOCKER_REGISTRY_ADDRESS"
      - "DOCKER_REGISTRY_EMAIL=$DOCKER_REGISTRY_EMAIL"
#      - "BOOTSTRAP=/opt/code-server --port 8080 --host 0.0.0.0 --base-path $ENDPOINT_BASE_URI"
    labels:
      - "traefik.port=8085"
      # - "traefik.http.routers.vscodehost.entrypoints=web"
      - "traefik.http.routers.vscodehost.rule=Host(`$DOMAIN`) && Path(`/vm/socket`) || (PathPrefix(`/api/machine`))"
      - "traefik.http.routers.vscodehost.middlewares=auth_then_strip,errorcats"
      - "traefik.http.routers.vscodehost.tls.certresolver=myresolver"
    networks:
      - frontend
networks:
  vm:
    external: true
  frontend:
